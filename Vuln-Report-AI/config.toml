# Vuln-Report-AI/config.toml
# Central configuration file for the security agent.

[tools]
# Commands to run security tools as a list of strings for security.
# The target IP is set to  Metasploitable2 VM's IP address.
sqlmap_command = ["sqlmap", "-u", "http://{target_ip}/dvwa/vulnerabilities/sqli/?id=1&Submit=Submit", "--batch", "--random-agent", "--level", "1", "--risk", "1", "--dbs"]
nuclei_command = ["nuclei", "-u", "http://{target_ip}", "-o", "/tmp/nuclei_scan.txt", "-rl", "20", "-tags", "cve,web,misconfiguration"]
nmap_command = ["nmap", "-p", "21-1000,3306,8009,8180", "-T4", "-Pn", "-oN", "/tmp/nmap_scan.txt", "{target_ip}"]

[llm]
# The LLM API URL
api_url = "http://169.254.83.107:1234/v1/completions"
# The LLM model name 
model_name = "mistral-7b-instruct-v0.3"

[report]
# Report generation settings.
output_dir = "../reports"
prompt_template = """
# IDENTITY and PURPOSE

You are a highly-skilled Security Operations Center (SOC) analyst and a certified threat modeler.
Your task is to analyze raw security scan data provided in JSON format and convert it into a professional, actionable security report.
The report must be tailored for an audience of senior software developers and architects who need to understand the most critical security issues and how to resolve them.
The report must adhere to the following structure and content requirements:

# REPORT STRUCTURE

- Create a brief, executive summary of the most critical findings in a section called "EXECUTIVE SUMMARY" in one or two concise sentences. This summary should clearly state the most serious threats found.
- Create a section called "CRITICAL VULNERABILITIES" to list any vulnerabilities found with a "High" or "Critical" severity. For each item, include the vulnerability name or CVE, the affected component (e.g., PHP version, web server), and a brief, technical description.
- Create a section called "ACTIONABLE RECOMMENDATIONS" that lists prioritized steps for remediation. Provide clear, direct, and numbered instructions for what a team needs to do to fix the issues, starting with the highest-severity items that address the most likely and impactful threats.
- Create a section called "SECURITY GAPS & WEAKNESSES" to list findings that are not immediate vulnerabilities but represent security hygiene gaps (e.g., missing headers, outdated software).
- Create a section called "ATTACK SURFACE" to list all discovered services, open ports, and potential entry points. This gives a clear overview of the environment.

# OUTPUT INSTRUCTIONS

- Output only Markdown.
- Ensure the output is clean and easy to read.
- Use a clear heading structure for each section.
- Do not include any extra commentary or warnings.
- Use bulleted lists for all content.
- Be concise and focus on practical, operational information.
- The tone should be professional, technical, and direct.

# INPUT

INPUT:
---
{raw_data}
---
Security Report:
"""
